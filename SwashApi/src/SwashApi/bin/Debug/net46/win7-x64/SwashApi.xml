<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SwashApi</name>
    </assembly>
    <members>
        <member name="T:SwashApi.Controllers.UsersController">
            <summary>
            Supports all user-centric operations
            </summary>
        </member>
        <member name="M:SwashApi.Controllers.UsersController.Get">
            <summary>
            Lists all the registered users in the system
            </summary>
            <returns></returns>
            <example>GET: api/users</example>
        </member>
        <member name="M:SwashApi.Controllers.UsersController.Get(System.Guid)">
            <summary>
            Gets the user with the supplied id
            </summary>
            <param name="id">Unique identifier of the user</param>
            <returns>The matching user record</returns>
            <example>GET api/users/79A0C53F-8131-4E7C-8BA8-AD4D8659FED7</example>
        </member>
        <member name="M:SwashApi.Controllers.UsersController.Post(SwashApi.Model.User)">
            <summary>
            Creates a new User
            </summary>
            <param name="userData">JSON representation of a User</param>
            <example>POST api/users</example>
        </member>
        <member name="M:SwashApi.Controllers.UsersController.Put(System.Guid,SwashApi.Model.User)">
            <summary>
            Updates the existing user record
            </summary>
            <param name="id">Id of the user record to update</param>
            <param name="userData">JSON representation of a User</param>
            <example>PUT api/users/79A0C53F-8131-4E7C-8BA8-AD4D8659FED7</example>
        </member>
        <member name="M:SwashApi.Controllers.UsersController.Delete(System.Guid)">
            <summary>
            Deletes the urecord of the user with the supplied id
            </summary>
            <param name="id">Id of the record to delete</param>
            <example>DELETE api/users/5</example>
        </member>
        <member name="T:SwashApi.Controllers.ValuesController">
            <summary>
            All values based operations
            </summary>
        </member>
        <member name="M:SwashApi.Controllers.ValuesController.Get">
            <summary>
            Lists all available values
            </summary>
            <returns>List of all available values</returns>
        </member>
        <member name="M:SwashApi.Controllers.ValuesController.Get(System.Int32)">
            <summary>
            Gets the value matching the supplied id
            </summary>
            <param name="id">The id of the value to return</param>
            <returns>The value matching the supplied id</returns>
        </member>
        <member name="M:SwashApi.Controllers.ValuesController.Post(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:SwashApi.Controllers.ValuesController.Put(System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="value"></param>
        </member>
        <member name="M:SwashApi.Controllers.ValuesController.Delete(System.Int32)">
            <summary>
            
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:SwashApi.Model.User">
            <summary>
            A 'person' registered to use the system
            </summary>
        </member>
        <member name="P:SwashApi.Model.User.Id">
            <summary>
            Unique identifier for the user
            </summary>
        </member>
        <member name="P:SwashApi.Model.User.Email">
            <summary>
            Unique email address for the user
            </summary>
        </member>
        <member name="P:SwashApi.Model.User.Name">
            <summary>
            Preferred name of the user
            </summary>
        </member>
        <member name="P:SwashApi.Model.User.IsVerified">
            <summary>
            Whether the user's email address has been verified
            </summary>
        </member>
    </members>
</doc>
